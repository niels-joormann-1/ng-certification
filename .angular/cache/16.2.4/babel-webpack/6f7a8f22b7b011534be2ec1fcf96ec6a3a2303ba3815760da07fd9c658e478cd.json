{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, Input } from '@angular/core';\nexport let WeatherReportComponent = class WeatherReportComponent {\n  constructor(weatherService, zipcodeService) {\n    this.weatherService = weatherService;\n    this.zipcodeService = zipcodeService;\n    this.zipcode = \"\";\n  }\n  ngOnInit() {\n    //console.info('init');\n    this.weatherService.getWeatherReport(this.zipcode).subscribe(response => {\n      this.weather = response;\n      this.weather.icon = this.weatherService.getIcon(this.weather.weather[0].description);\n      //console.info(this.weather)\n    });\n  }\n\n  deleteZipcode() {\n    this.zipcodeService.deleteZipcode(this.zipcode);\n  }\n};\n__decorate([Input()], WeatherReportComponent.prototype, \"zipcode\", void 0);\nWeatherReportComponent = __decorate([Component({\n  selector: 'app-weather-report',\n  templateUrl: './weather-report.component.html',\n  styleUrls: ['./weather-report.component.css', '../../../node_modules/bootstrap/dist/css/bootstrap.min.css']\n})], WeatherReportComponent);","map":{"version":3,"names":["Component","Input","WeatherReportComponent","constructor","weatherService","zipcodeService","zipcode","ngOnInit","getWeatherReport","subscribe","response","weather","icon","getIcon","description","deleteZipcode","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\niels\\source\\repos\\ng-certification\\src\\app\\weather-report\\weather-report.component.ts"],"sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\nimport { WeatherService } from '../weather.service';\nimport { Weather } from '../weatherinfo.model';\nimport { ZipcodeService } from '../zipcode.service';\n\n@Component({\n  selector: 'app-weather-report',\n  templateUrl: './weather-report.component.html',\n  styleUrls: ['./weather-report.component.css', '../../../node_modules/bootstrap/dist/css/bootstrap.min.css']\n})\nexport class WeatherReportComponent implements OnInit {\n\n  @Input() zipcode: string = \"\";\n\n  constructor(\n    private weatherService: WeatherService,\n    private zipcodeService: ZipcodeService\n  ) { }\n\n  weather: Weather;\n\n  ngOnInit()\n  {\n    //console.info('init');\n    this.weatherService.getWeatherReport(this.zipcode).subscribe(response =>\n    {\n      this.weather = response;\n      this.weather.icon = this.weatherService.getIcon(this.weather.weather[0].description);\n      //console.info(this.weather)\n    });\n  }\n\n  deleteZipcode()\n  {\n    this.zipcodeService.deleteZipcode(this.zipcode);\n  }\n\n}\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,KAAK,QAAgB,eAAe;AAUjD,WAAMC,sBAAsB,GAA5B,MAAMA,sBAAsB;EAIjCC,YACUC,cAA8B,EAC9BC,cAA8B;IAD9B,KAAAD,cAAc,GAAdA,cAAc;IACd,KAAAC,cAAc,GAAdA,cAAc;IAJf,KAAAC,OAAO,GAAW,EAAE;EAKzB;EAIJC,QAAQA,CAAA;IAEN;IACA,IAAI,CAACH,cAAc,CAACI,gBAAgB,CAAC,IAAI,CAACF,OAAO,CAAC,CAACG,SAAS,CAACC,QAAQ,IAAG;MAEtE,IAAI,CAACC,OAAO,GAAGD,QAAQ;MACvB,IAAI,CAACC,OAAO,CAACC,IAAI,GAAG,IAAI,CAACR,cAAc,CAACS,OAAO,CAAC,IAAI,CAACF,OAAO,CAACA,OAAO,CAAC,CAAC,CAAC,CAACG,WAAW,CAAC;MACpF;IACF,CAAC,CAAC;EACJ;;EAEAC,aAAaA,CAAA;IAEX,IAAI,CAACV,cAAc,CAACU,aAAa,CAAC,IAAI,CAACT,OAAO,CAAC;EACjD;CAED;AAzBUU,UAAA,EAARf,KAAK,EAAE,C,sDAAsB;AAFnBC,sBAAsB,GAAAc,UAAA,EALlChB,SAAS,CAAC;EACTiB,QAAQ,EAAE,oBAAoB;EAC9BC,WAAW,EAAE,iCAAiC;EAC9CC,SAAS,EAAE,CAAC,gCAAgC,EAAE,4DAA4D;CAC3G,CAAC,C,EACWjB,sBAAsB,CA2BlC"},"metadata":{},"sourceType":"module","externalDependencies":[]}