{"ast":null,"code":"var _class;\nimport { map } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../weather.service\";\nfunction ForecastComponent_li_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 7);\n    i0.ɵɵtext(1);\n    i0.ɵɵelement(2, \"img\", 8);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const weather_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate4(\" \", weather_r1.dt_txt, \": \", weather_r1.weather.description, \" - Min: \", weather_r1.main.temp_max, \" - Max: \", weather_r1.main.temp_min, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"src\", weather_r1.icon, i0.ɵɵsanitizeUrl);\n  }\n}\nexport class ForecastComponent {\n  constructor(route, weatherService, router) {\n    this.route = route;\n    this.weatherService = weatherService;\n    this.router = router;\n    this.zipcode = \"\";\n  }\n  ngOnInit() {\n    this.route.params.pipe(map(params => {\n      this.zipcode = params['zipcode'];\n    }));\n    this.weatherService.getForecast(this.zipcode).subscribe(response => {\n      this.forecast = response;\n      this.forecast.list.forEach(weather => {\n        weather.icon = this.weatherService.getIcon(weather.weather[0].description);\n      });\n    });\n  }\n  redirectToHome() {\n    this.router.navigate([\"/home\"]);\n  }\n}\n_class = ForecastComponent;\n_class.ɵfac = function ForecastComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.WeatherService), i0.ɵɵdirectiveInject(i1.Router));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-forecast\"]],\n  decls: 9,\n  vars: 2,\n  consts: [[1, \"container-fluid\"], [1, \"panel\", \"panel-default\"], [1, \"panel-heading\"], [1, \"panel-title\"], [1, \"list-group\"], [\"class\", \"list-group-item\", 4, \"ngFor\", \"ngForIn\"], [\"tabindex\", \"0\", \"id\", \"mainPageBtn\", 1, \"btn\", \"btn-success\", 3, \"click\"], [1, \"list-group-item\"], [1, \"icon\", 3, \"src\"]],\n  template: function ForecastComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h3\", 3);\n      i0.ɵɵtext(4);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(5, \"ul\", 4);\n      i0.ɵɵtemplate(6, ForecastComponent_li_6_Template, 3, 5, \"li\", 5);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(7, \"button\", 6);\n      i0.ɵɵlistener(\"click\", function ForecastComponent_Template_button_click_7_listener() {\n        return ctx.redirectToHome();\n      });\n      i0.ɵɵtext(8, \"< Back to main page\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵtextInterpolate1(\"5-day forecast for \", ctx.forecast.city.name, \"\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForIn\", ctx.forecast.list);\n    }\n  },\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["map","i0","ɵɵelementStart","ɵɵtext","ɵɵelement","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate4","weather_r1","dt_txt","weather","description","main","temp_max","temp_min","ɵɵpropertyInterpolate","icon","ɵɵsanitizeUrl","ForecastComponent","constructor","route","weatherService","router","zipcode","ngOnInit","params","pipe","getForecast","subscribe","response","forecast","list","forEach","getIcon","redirectToHome","navigate","ɵɵdirectiveInject","i1","ActivatedRoute","i2","WeatherService","Router","selectors","decls","vars","consts","template","ForecastComponent_Template","rf","ctx","ɵɵtemplate","ForecastComponent_li_6_Template","ɵɵlistener","ForecastComponent_Template_button_click_7_listener","ɵɵtextInterpolate1","city","name","ɵɵproperty"],"sources":["C:\\Users\\niels\\source\\repos\\ng-certification\\src\\app\\forecast\\forecast.component.ts","C:\\Users\\niels\\source\\repos\\ng-certification\\src\\app\\forecast\\forecast.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { map } from 'rxjs';\nimport { WeatherService } from '../weather.service';\nimport { Weather } from '../weatherinfo.model';\nimport { Forecast } from '../forecast.model';\n\n@Component({\n  selector: 'app-forecast',\n  templateUrl: './forecast.component.html',\n  styleUrls: ['./forecast.component.css']\n})\nexport class ForecastComponent implements OnInit {\n  private zipcode: string = \"\";\n  forecast: Forecast;\n\n  constructor(\n    private route: ActivatedRoute,\n    private weatherService: WeatherService,\n  private router: Router) { }\n\n  ngOnInit(): void {\n    this.route.params.pipe(map(params => { this.zipcode = params['zipcode'] }));\n    this.weatherService.getForecast(this.zipcode).subscribe(response => {\n      this.forecast = response;\n    this.forecast.list.forEach(weather => {weather.icon = this.weatherService.getIcon(weather.weather[0].description)})});\n  }\n\n  redirectToHome() {\n    this.router.navigate([\"/home\");\n  }\n\n}\n","<div class=\"container-fluid\">\n  <div class=\"panel panel-default\">\n    <div class=\"panel-heading\">\n      <h3 class=\"panel-title\">5-day forecast for {{forecast.city.name}}</h3>\n\n    </div>\n    <ul class=\"list-group\">\n      <li class=\"list-group-item\" *ngFor=\"let weather in forecast.list\">\n        {{weather.dt_txt}}:\n        {{weather.weather.description}}\n        - Min: {{weather.main.temp_max}}\n        - Max: {{weather.main.temp_min}}\n\n        <img class=\"icon\" src=\"{{weather.icon}}\">\n      </li>\n    </ul>\n  </div>\n  <button class=\"btn btn-success\" tabindex=\"0\" id=\"mainPageBtn\" (click)=\"redirectToHome()\">&lt; Back to main page</button>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}