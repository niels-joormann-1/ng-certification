{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let ForecastComponent = class ForecastComponent {\n  constructor(route, weatherService, router) {\n    this.route = route;\n    this.weatherService = weatherService;\n    this.router = router;\n    this.zipcode = \"\";\n  }\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      this.zipcode = params['zipcode'];\n      console.info(this.zipcode);\n      this.weatherService.getForecast(this.zipcode).subscribe(response => {\n        this.forecast = response;\n        this.forecast.list.forEach(weather => {\n          weather.icon = this.weatherService.getIcon(weather.weather[0].description);\n        });\n      });\n    });\n  }\n  redirectToHome() {\n    this.router.navigate([\"/\"]);\n  }\n};\nForecastComponent = __decorate([Component({\n  selector: 'app-forecast',\n  templateUrl: './forecast.component.html',\n  styleUrls: ['./forecast.component.css', '../../../node_modules/bootstrap/dist/css/bootstrap.min.css']\n})], ForecastComponent);","map":{"version":3,"names":["Component","ForecastComponent","constructor","route","weatherService","router","zipcode","ngOnInit","params","subscribe","console","info","getForecast","response","forecast","list","forEach","weather","icon","getIcon","description","redirectToHome","navigate","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\niels\\source\\repos\\ng-certification\\src\\app\\forecast\\forecast.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { WeatherService } from '../weather.service';\nimport { Forecast } from '../forecast.model';\n\n@Component({\n  selector: 'app-forecast',\n  templateUrl: './forecast.component.html',\n  styleUrls: ['./forecast.component.css', '../../../node_modules/bootstrap/dist/css/bootstrap.min.css']\n})\nexport class ForecastComponent implements OnInit {\n  zipcode: string = \"\";\n  forecast: Forecast;\n\n  constructor(\n    private route: ActivatedRoute,\n    private weatherService: WeatherService,\n    private router: Router) { }\n\n  ngOnInit(): void {\n    this.route.params.subscribe(params => {\n      this.zipcode = params['zipcode']\n      console.info(this.zipcode);\n      this.weatherService.getForecast(this.zipcode).subscribe(response => {\n        this.forecast = response;\n        this.forecast.list.forEach(weather => { weather.icon = this.weatherService.getIcon(weather.weather[0].description) })\n      });\n    });\n\n  }\n\n  redirectToHome() {\n    this.router.navigate([\"/\"]);\n  }\n\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAU1C,WAAMC,iBAAiB,GAAvB,MAAMA,iBAAiB;EAI5BC,YACUC,KAAqB,EACrBC,cAA8B,EAC9BC,MAAc;IAFd,KAAAF,KAAK,GAALA,KAAK;IACL,KAAAC,cAAc,GAAdA,cAAc;IACd,KAAAC,MAAM,GAANA,MAAM;IANhB,KAAAC,OAAO,GAAW,EAAE;EAMQ;EAE5BC,QAAQA,CAAA;IACN,IAAI,CAACJ,KAAK,CAACK,MAAM,CAACC,SAAS,CAACD,MAAM,IAAG;MACnC,IAAI,CAACF,OAAO,GAAGE,MAAM,CAAC,SAAS,CAAC;MAChCE,OAAO,CAACC,IAAI,CAAC,IAAI,CAACL,OAAO,CAAC;MAC1B,IAAI,CAACF,cAAc,CAACQ,WAAW,CAAC,IAAI,CAACN,OAAO,CAAC,CAACG,SAAS,CAACI,QAAQ,IAAG;QACjE,IAAI,CAACC,QAAQ,GAAGD,QAAQ;QACxB,IAAI,CAACC,QAAQ,CAACC,IAAI,CAACC,OAAO,CAACC,OAAO,IAAG;UAAGA,OAAO,CAACC,IAAI,GAAG,IAAI,CAACd,cAAc,CAACe,OAAO,CAACF,OAAO,CAACA,OAAO,CAAC,CAAC,CAAC,CAACG,WAAW,CAAC;QAAC,CAAC,CAAC;MACvH,CAAC,CAAC;IACJ,CAAC,CAAC;EAEJ;EAEAC,cAAcA,CAAA;IACZ,IAAI,CAAChB,MAAM,CAACiB,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;EAC7B;CAED;AAzBYrB,iBAAiB,GAAAsB,UAAA,EAL7BvB,SAAS,CAAC;EACTwB,QAAQ,EAAE,cAAc;EACxBC,WAAW,EAAE,2BAA2B;EACxCC,SAAS,EAAE,CAAC,0BAA0B,EAAE,4DAA4D;CACrG,CAAC,C,EACWzB,iBAAiB,CAyB7B"},"metadata":{},"sourceType":"module","externalDependencies":[]}