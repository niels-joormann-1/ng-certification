{"ast":null,"code":"var _class;\nimport { HttpParams } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class WeatherService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.locationEndpoint = `http://api.openweathermap.org/data/2.5/weather`; //?zip=95742,US&appid=5a4b2d457ecbef9eb2a71e480b947604`;\n    this.appId = `5a4b2d457ecbef9eb2a71e480b947604`;\n  }\n  getWeatherReport(zipcode) {\n    console.info(`getWeatherReport for ${zipcode}`);\n    this.httpClient.get(this.weatherEndpoint, {\n      params: new HttpParams().set('zip ', location.lat).set('lon', location.lon).set('appid', this.appId)\n    }).subscribe(response => {\n      return response;\n    });\n  }\n}\n_class = WeatherService;\n_class.ɵfac = function WeatherService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["HttpParams","WeatherService","constructor","httpClient","locationEndpoint","appId","getWeatherReport","zipcode","console","info","get","weatherEndpoint","params","set","location","lat","lon","subscribe","response","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\niels\\source\\repos\\ng-certification\\src\\app\\weather.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http'\nimport { BehaviorSubject, map, Observable, of } from 'rxjs';\nimport { Location } from '../app/location.model'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WeatherService {\n\n  constructor(private httpClient: HttpClient) { }\n\n  locationEndpoint = `http://api.openweathermap.org/data/2.5/weather` //?zip=95742,US&appid=5a4b2d457ecbef9eb2a71e480b947604`;\n  appId = `5a4b2d457ecbef9eb2a71e480b947604`;\n\n  getWeatherReport(zipcode: string) {\n    console.info(`getWeatherReport for ${zipcode}`);\n      this.httpClient.get(this.weatherEndpoint, {\n        params: new HttpParams()\n          .set('zip ', location.lat)\n          .set('lon', location.lon)\n          .set('appid', this.appId)\n      }).subscribe(response => { return response; })\n    })\n  }\n}\n"],"mappings":";AACA,SAAqBA,UAAU,QAAQ,sBAAsB;;;AAO7D,OAAM,MAAOC,cAAc;EAEzBC,YAAoBC,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;IAE9B,KAAAC,gBAAgB,GAAG,gDAAgD,EAAC;IACpE,KAAAC,KAAK,GAAG,kCAAkC;EAHI;EAK9CC,gBAAgBA,CAACC,OAAe;IAC9BC,OAAO,CAACC,IAAI,CAAC,wBAAwBF,OAAO,EAAE,CAAC;IAC7C,IAAI,CAACJ,UAAU,CAACO,GAAG,CAAC,IAAI,CAACC,eAAe,EAAE;MACxCC,MAAM,EAAE,IAAIZ,UAAU,EAAE,CACrBa,GAAG,CAAC,MAAM,EAAEC,QAAQ,CAACC,GAAG,CAAC,CACzBF,GAAG,CAAC,KAAK,EAAEC,QAAQ,CAACE,GAAG,CAAC,CACxBH,GAAG,CAAC,OAAO,EAAE,IAAI,CAACR,KAAK;KAC3B,CAAC,CAACY,SAAS,CAACC,QAAQ,IAAG;MAAG,OAAOA,QAAQ;IAAE,CAAC,CAAC;EAChD;;SAfSjB,cAAc;;mBAAdA,MAAc,EAAAkB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;SAAdrB,MAAc;EAAAsB,OAAA,EAAdtB,MAAc,CAAAuB,IAAA;EAAAC,UAAA,EAFb;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}