{"ast":null,"code":"var _class;\nimport { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class ZipcodeService {\n  constructor() {\n    this.zipcodes = new BehaviorSubject([]);\n    this.zipcodes$ = this.zipcodes.asObservable();\n    this.updateZipcodes();\n  }\n  storeZipcode(zipcode) {\n    //console.info('store')\n    var existingStorage = localStorage.getItem('zipcodes');\n    if (existingStorage == null) {\n      localStorage.setItem('zipcodes', JSON.stringify([zipcode]));\n      existingStorage = JSON.stringify([zipcode]);\n      this.updateZipcodes();\n      return;\n    }\n    try {\n      var existingZipcodes = JSON.parse(existingStorage);\n      //console.info(`existing zipcodes ${existingZipcodes}`);\n      if (typeof existingZipcodes == typeof []) {\n        existingZipcodes.push(zipcode);\n        //console.info(existingZipcodes);\n        localStorage.setItem('zipcodes', JSON.stringify(existingZipcodes));\n        this.updateZipcodes();\n      }\n    } catch (e) {\n      console.error(`Failed to save zipcode: ${e}`);\n    }\n  }\n  updateZipcodes() {\n    var existingStorage = localStorage.getItem('zipcodes');\n    if (existingStorage == null) {\n      this.zipcodes.next([]);\n      //throw new Error(\"No zipcodes\");\n      return;\n    }\n    this.zipcodes.next(JSON.parse(existingStorage));\n    //console.info(existingStorage);\n  }\n\n  deleteZipcode(zipcode) {\n    this.zipcodes.value.splice(this.zipcodes.value.indexOf(zipcode), 1);\n  }\n}\n_class = ZipcodeService;\n_class.ɵfac = function ZipcodeService_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["BehaviorSubject","ZipcodeService","constructor","zipcodes","zipcodes$","asObservable","updateZipcodes","storeZipcode","zipcode","existingStorage","localStorage","getItem","setItem","JSON","stringify","existingZipcodes","parse","push","e","console","error","next","deleteZipcode","value","splice","indexOf","factory","ɵfac","providedIn"],"sources":["C:\\Users\\niels\\source\\repos\\ng-certification\\src\\app\\zipcode.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, of } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ZipcodeService {\n\n  constructor() {\n    this.updateZipcodes();\n  }\n\n  private zipcodes = new BehaviorSubject<string[]>([]);\n  public zipcodes$ = this.zipcodes.asObservable();\n\n  storeZipcode(zipcode: string) {\n    //console.info('store')\n    var existingStorage = localStorage.getItem('zipcodes');\n    if (existingStorage == null) {\n      localStorage.setItem('zipcodes', JSON.stringify([zipcode]));\n      existingStorage = JSON.stringify([zipcode]);\n      this.updateZipcodes();\n      return;\n    }\n\n    try {\n      var existingZipcodes = JSON.parse(existingStorage);\n      //console.info(`existing zipcodes ${existingZipcodes}`);\n      if (typeof (existingZipcodes) == typeof ([])) {\n        existingZipcodes.push(zipcode);\n        //console.info(existingZipcodes);\n        localStorage.setItem('zipcodes', JSON.stringify(existingZipcodes));\n        this.updateZipcodes();\n\n      }\n    }\n    catch (e) {\n      console.error(`Failed to save zipcode: ${e}`)\n    }\n  }\n\n  updateZipcodes() {\n    var existingStorage = localStorage.getItem('zipcodes');\n    if (existingStorage == null) {\n      this.zipcodes.next([]);\n      //throw new Error(\"No zipcodes\");\n      return;\n    }\n    this.zipcodes.next(JSON.parse(existingStorage));\n    //console.info(existingStorage);\n  }\n\n  deleteZipcode(zipcode: string)\n  {\n    this.zipcodes.value.splice(this.zipcodes.value.indexOf(zipcode), 1)\n  }\n}\n"],"mappings":";AACA,SAASA,eAAe,QAAwB,MAAM;;AAKtD,OAAM,MAAOC,cAAc;EAEzBC,YAAA;IAIQ,KAAAC,QAAQ,GAAG,IAAIH,eAAe,CAAW,EAAE,CAAC;IAC7C,KAAAI,SAAS,GAAG,IAAI,CAACD,QAAQ,CAACE,YAAY,EAAE;IAJ7C,IAAI,CAACC,cAAc,EAAE;EACvB;EAKAC,YAAYA,CAACC,OAAe;IAC1B;IACA,IAAIC,eAAe,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IACtD,IAAIF,eAAe,IAAI,IAAI,EAAE;MAC3BC,YAAY,CAACE,OAAO,CAAC,UAAU,EAAEC,IAAI,CAACC,SAAS,CAAC,CAACN,OAAO,CAAC,CAAC,CAAC;MAC3DC,eAAe,GAAGI,IAAI,CAACC,SAAS,CAAC,CAACN,OAAO,CAAC,CAAC;MAC3C,IAAI,CAACF,cAAc,EAAE;MACrB;;IAGF,IAAI;MACF,IAAIS,gBAAgB,GAAGF,IAAI,CAACG,KAAK,CAACP,eAAe,CAAC;MAClD;MACA,IAAI,OAAQM,gBAAiB,IAAI,OAAQ,EAAG,EAAE;QAC5CA,gBAAgB,CAACE,IAAI,CAACT,OAAO,CAAC;QAC9B;QACAE,YAAY,CAACE,OAAO,CAAC,UAAU,EAAEC,IAAI,CAACC,SAAS,CAACC,gBAAgB,CAAC,CAAC;QAClE,IAAI,CAACT,cAAc,EAAE;;KAGxB,CACD,OAAOY,CAAC,EAAE;MACRC,OAAO,CAACC,KAAK,CAAC,2BAA2BF,CAAC,EAAE,CAAC;;EAEjD;EAEAZ,cAAcA,CAAA;IACZ,IAAIG,eAAe,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IACtD,IAAIF,eAAe,IAAI,IAAI,EAAE;MAC3B,IAAI,CAACN,QAAQ,CAACkB,IAAI,CAAC,EAAE,CAAC;MACtB;MACA;;IAEF,IAAI,CAAClB,QAAQ,CAACkB,IAAI,CAACR,IAAI,CAACG,KAAK,CAACP,eAAe,CAAC,CAAC;IAC/C;EACF;;EAEAa,aAAaA,CAACd,OAAe;IAE3B,IAAI,CAACL,QAAQ,CAACoB,KAAK,CAACC,MAAM,CAAC,IAAI,CAACrB,QAAQ,CAACoB,KAAK,CAACE,OAAO,CAACjB,OAAO,CAAC,EAAE,CAAC,CAAC;EACrE;;SAjDWP,cAAc;;mBAAdA,MAAc;AAAA;;SAAdA,MAAc;EAAAyB,OAAA,EAAdzB,MAAc,CAAA0B,IAAA;EAAAC,UAAA,EAFb;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}