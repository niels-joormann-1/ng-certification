{"ast":null,"code":"var _class;\nimport { HttpParams } from '@angular/common/http';\nimport { Location } from '../app/location.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class WeatherService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.locationEndpoint = `http://api.openweathermap.org/geo/1.0/zip`; //?zip=95742,US&appid=5a4b2d457ecbef9eb2a71e480b947604`;\n    this.weatherEndpoint = `https://api.openweathermap.org/data/3.0/onecall`;\n    this.appId = `5a4b2d457ecbef9eb2a71e480b947604`;\n  }\n}\n_class = WeatherService;\n_class.ɵfac = function WeatherService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});\nnew Location();\n;\ngetWeatherReport(zipcode, string);\n{\n  console.info(`getWeatherReport for ${zipcode}`);\n  this.getLocation(zipcode).subscribe(location => {\n    this.httpClient.get(this.weatherEndpoint, {\n      params: new HttpParams().set('lat', location.lat).set('lon', location.lon).set('appid', this.appId)\n    }).subscribe(response => {\n      return response;\n    });\n  });\n}","map":{"version":3,"names":["HttpParams","Location","WeatherService","constructor","httpClient","locationEndpoint","weatherEndpoint","appId","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn","getWeatherReport","zipcode","string","console","info","getLocation","subscribe","location","get","params","set","lat","lon","response"],"sources":["C:\\Users\\niels\\source\\repos\\ng-certification\\src\\app\\weather.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http'\nimport { BehaviorSubject, map, Observable, of } from 'rxjs';\nimport { Location } from '../app/location.model'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WeatherService {\n\n  constructor(private httpClient: HttpClient) { }\n\n  locationEndpoint = `http://api.openweathermap.org/geo/1.0/zip` //?zip=95742,US&appid=5a4b2d457ecbef9eb2a71e480b947604`;\n  weatherEndpoint = `https://api.openweathermap.org/data/3.0/onecall`\n  appId = `5a4b2d457ecbef9eb2a71e480b947604`;\n\n  private location: new BehaviorSubject<Location>(new Location());\n\n  getWeatherReport(zipcode: string) {\n    console.info(`getWeatherReport for ${zipcode}`);\n    this.getLocation(zipcode).subscribe(location => {\n      this.httpClient.get(this.weatherEndpoint, {\n        params: new HttpParams()\n          .set('lat', location.lat)\n          .set('lon', location.lon)\n          .set('appid', this.appId)\n      }).subscribe(response => { return response; })\n    })\n  }\n}\n"],"mappings":";AACA,SAAqBA,UAAU,QAAQ,sBAAsB;AAE7D,SAASC,QAAQ,QAAQ,uBAAuB;;;AAKhD,OAAM,MAAOC,cAAc;EAEzBC,YAAoBC,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;IAE9B,KAAAC,gBAAgB,GAAG,2CAA2C,EAAC;IAC/D,KAAAC,eAAe,GAAG,iDAAiD;IACnE,KAAAC,KAAK,GAAG,kCAAkC;EAJI;;SAFnCL,cAAc;;mBAAdA,MAAc,EAAAM,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;SAAdT,MAAc;EAAAU,OAAA,EAAdV,MAAc,CAAAW,IAAA;EAAAC,UAAA,EAFb;AAAM;AAU8B,IAAIb,QAAQ,EAAE;AAAC;AAE/Dc,gBAAgB,CAACC,OAAO,EAAEC,MAAM,CAAC;AAAC;EAChCC,OAAO,CAACC,IAAI,CAAC,wBAAwBH,OAAO,EAAE,CAAC;EAC/C,IAAI,CAACI,WAAW,CAACJ,OAAO,CAAC,CAACK,SAAS,CAACC,QAAQ,IAAG;IAC7C,IAAI,CAAClB,UAAU,CAACmB,GAAG,CAAC,IAAI,CAACjB,eAAe,EAAE;MACxCkB,MAAM,EAAE,IAAIxB,UAAU,EAAE,CACrByB,GAAG,CAAC,KAAK,EAAEH,QAAQ,CAACI,GAAG,CAAC,CACxBD,GAAG,CAAC,KAAK,EAAEH,QAAQ,CAACK,GAAG,CAAC,CACxBF,GAAG,CAAC,OAAO,EAAE,IAAI,CAAClB,KAAK;KAC3B,CAAC,CAACc,SAAS,CAACO,QAAQ,IAAG;MAAG,OAAOA,QAAQ;IAAE,CAAC,CAAC;EAChD,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}